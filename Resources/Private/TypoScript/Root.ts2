#
# This object is meant to be used with @process.
# `cssPath` should contain a path to a CSS file, e.g. `cssPath = 'resource://Psmb.Newsletter/Public/styles.css'`
#
prototype(Psmb.Newsletter:CssToInline) {
	@class = 'Psmb\\Newsletter\\TypoScript\\CssToInlineImplementation'
	value = ${value}
	cssPath = 'to-be-set'
}

prototype(Psmb.Newsletter:MailRenderer) < prototype(TYPO3.TypoScript:RawArray) {
	subject = ''
	body = ''
	#body.@process.cssToInline = Psmb.Newsletter:CssToInline {
	#	cssPath = 'to-be-set'
	#}
	recipientAddress = ${subscriber.email}
	recipientName = ${subscriber.name}
	replyToAddress = ${subscription.senderAddress || globalSettings.senderAddress}
	senderAddress = ${subscription.senderAddress || globalSettings.senderAddress}
	senderName = ${subscription.senderName || globalSettings.senderName}
}

prototype(Psmb.Newsletter:ConfirmationMailRenderer) < prototype(Psmb.Newsletter:MailRenderer) {
	subject = 'Activate your subscription'
	body = TYPO3.TypoScript:Tag {
		tagName = 'a'
		attributes.href = ${activationLink}
		content = 'Click to confirm your subscription'
	}
}

prototype(Psmb.Newsletter:SubscriptionCase) < prototype(TYPO3.TypoScript:Case) {
	confirmation {
		condition = ${activationLink}
		renderer = Psmb.Newsletter:ConfirmationMailRenderer
	}
	rendererFromSettings {
		condition = ${subscription.renderer}
		type = ${subscription.renderer}
	}
	default {
		condition = ${true}
		renderer = Psmb.Newsletter:MailRenderer
	}
}

prototype(Psmb.Newsletter:UnsubscribeLink) < prototype(TYPO3.TypoScript:UriBuilder) {
	package = 'Psmb.Newsletter'
	controller = 'Subscription'
	action = 'edit'
	absolute = ${true}
	arguments {
		subscriber = ${subscriber}
	}
}

newsletter = Psmb.Newsletter:SubscriptionCase
